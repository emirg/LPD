In file included from ../src/bufferutil.cc:17:
../node_modules/nan/nan.h: En la función ‘void Nan::AsyncQueueWorker(Nan::AsyncWorker*)’:
../node_modules/nan/nan.h:2298:62: aviso: cast between incompatible function types from ‘void (*)(uv_work_t*)’ {aka ‘void (*)(uv_work_s*)’} to ‘uv_after_work_cb’ {aka ‘void (*)(uv_work_s*, int)’} [-Wcast-function-type]
     , reinterpret_cast<uv_after_work_cb>(AsyncExecuteComplete)
                                                              ^
../src/bufferutil.cc: En la función miembro static ‘static Nan::NAN_METHOD_RETURN_TYPE BufferUtil::Merge(Nan::NAN_METHOD_ARGS_TYPE)’:
../src/bufferutil.cc:50:49: aviso: ‘v8::Local<v8::Object> v8::Value::ToObject() const’ es obsoleto: Use maybe version [-Wdeprecated-declarations]
     Local<Object> bufferObj = info[0]->ToObject();
                                                 ^
In file included from ../src/bufferutil.cc:8:
/home/emiliano/.node-gyp/11.15.0/include/node/v8.h:10257:15: nota: se declara aquí
 Local<Object> Value::ToObject() const {
               ^~~~~
../src/bufferutil.cc:57:51: aviso: ‘v8::Local<v8::Object> v8::Value::ToObject() const’ es obsoleto: Use maybe version [-Wdeprecated-declarations]
       Local<Object> src = array->Get(i)->ToObject();
                                                   ^
In file included from ../src/bufferutil.cc:8:
/home/emiliano/.node-gyp/11.15.0/include/node/v8.h:10257:15: nota: se declara aquí
 Local<Object> Value::ToObject() const {
               ^~~~~
../src/bufferutil.cc: En la función miembro static ‘static Nan::NAN_METHOD_RETURN_TYPE BufferUtil::Unmask(Nan::NAN_METHOD_ARGS_TYPE)’:
../src/bufferutil.cc:68:50: aviso: ‘v8::Local<v8::Object> v8::Value::ToObject() const’ es obsoleto: Use maybe version [-Wdeprecated-declarations]
     Local<Object> buffer_obj = info[0]->ToObject();
                                                  ^
In file included from ../src/bufferutil.cc:8:
/home/emiliano/.node-gyp/11.15.0/include/node/v8.h:10257:15: nota: se declara aquí
 Local<Object> Value::ToObject() const {
               ^~~~~
../src/bufferutil.cc:70:48: aviso: ‘v8::Local<v8::Object> v8::Value::ToObject() const’ es obsoleto: Use maybe version [-Wdeprecated-declarations]
     Local<Object> mask_obj = info[1]->ToObject();
                                                ^
In file included from ../src/bufferutil.cc:8:
/home/emiliano/.node-gyp/11.15.0/include/node/v8.h:10257:15: nota: se declara aquí
 Local<Object> Value::ToObject() const {
               ^~~~~
../src/bufferutil.cc: En la función miembro static ‘static Nan::NAN_METHOD_RETURN_TYPE BufferUtil::Mask(Nan::NAN_METHOD_ARGS_TYPE)’:
../src/bufferutil.cc:89:50: aviso: ‘v8::Local<v8::Object> v8::Value::ToObject() const’ es obsoleto: Use maybe version [-Wdeprecated-declarations]
     Local<Object> buffer_obj = info[0]->ToObject();
                                                  ^
In file included from ../src/bufferutil.cc:8:
/home/emiliano/.node-gyp/11.15.0/include/node/v8.h:10257:15: nota: se declara aquí
 Local<Object> Value::ToObject() const {
               ^~~~~
../src/bufferutil.cc:90:48: aviso: ‘v8::Local<v8::Object> v8::Value::ToObject() const’ es obsoleto: Use maybe version [-Wdeprecated-declarations]
     Local<Object> mask_obj = info[1]->ToObject();
                                                ^
In file included from ../src/bufferutil.cc:8:
/home/emiliano/.node-gyp/11.15.0/include/node/v8.h:10257:15: nota: se declara aquí
 Local<Object> Value::ToObject() const {
               ^~~~~
../src/bufferutil.cc:92:50: aviso: ‘v8::Local<v8::Object> v8::Value::ToObject() const’ es obsoleto: Use maybe version [-Wdeprecated-declarations]
     Local<Object> output_obj = info[2]->ToObject();
                                                  ^
In file included from ../src/bufferutil.cc:8:
/home/emiliano/.node-gyp/11.15.0/include/node/v8.h:10257:15: nota: se declara aquí
 Local<Object> Value::ToObject() const {
               ^~~~~
../src/bufferutil.cc:93:51: aviso: ‘int32_t v8::Value::Int32Value() const’ es obsoleto: Use maybe version [-Wdeprecated-declarations]
     unsigned int dataOffset = info[3]->Int32Value();
                                                   ^
In file included from /home/emiliano/.node-gyp/11.15.0/include/node/v8.h:26,
                 from ../src/bufferutil.cc:8:
/home/emiliano/.node-gyp/11.15.0/include/node/v8.h:2572:46: nota: se declara aquí
   V8_DEPRECATED("Use maybe version", int32_t Int32Value() const);
                                              ^~~~~~~~~~
/home/emiliano/.node-gyp/11.15.0/include/node/v8config.h:326:3: nota: en definición de macro ‘V8_DEPRECATED’
   declarator __attribute__((deprecated(message)))
   ^~~~~~~~~~
../src/bufferutil.cc:94:47: aviso: ‘int32_t v8::Value::Int32Value() const’ es obsoleto: Use maybe version [-Wdeprecated-declarations]
     unsigned int length = info[4]->Int32Value();
                                               ^
In file included from /home/emiliano/.node-gyp/11.15.0/include/node/v8.h:26,
                 from ../src/bufferutil.cc:8:
/home/emiliano/.node-gyp/11.15.0/include/node/v8.h:2572:46: nota: se declara aquí
   V8_DEPRECATED("Use maybe version", int32_t Int32Value() const);
                                              ^~~~~~~~~~
/home/emiliano/.node-gyp/11.15.0/include/node/v8config.h:326:3: nota: en definición de macro ‘V8_DEPRECATED’
   declarator __attribute__((deprecated(message)))
   ^~~~~~~~~~
In file included from ../src/bufferutil.cc:9:
../src/bufferutil.cc: En el ámbito global:
/home/emiliano/.node-gyp/11.15.0/include/node/node.h:544:43: aviso: cast between incompatible function types from ‘void (*)(v8::Handle<v8::Object>)’ {aka ‘void (*)(v8::Local<v8::Object>)’} to ‘node::addon_register_func’ {aka ‘void (*)(v8::Local<v8::Object>, v8::Local<v8::Value>, void*)’} [-Wcast-function-type]
       (node::addon_register_func) (regfunc),                          \
                                           ^
/home/emiliano/.node-gyp/11.15.0/include/node/node.h:578:3: nota: en expansión de macro ‘NODE_MODULE_X’
   NODE_MODULE_X(modname, regfunc, NULL, 0)  // NOLINT (readability/null_usage)
   ^~~~~~~~~~~~~
../src/bufferutil.cc:121:1: nota: en expansión de macro ‘NODE_MODULE’
 NODE_MODULE(bufferutil, init)
 ^~~~~~~~~~~
In file included from ../src/bufferutil.cc:8:
/home/emiliano/.node-gyp/11.15.0/include/node/v8.h: En la instanciación de ‘void v8::PersistentBase<T>::SetWeak(P*, typename v8::WeakCallbackInfo<P>::Callback, v8::WeakCallbackType) [with P = node::ObjectWrap; T = v8::Object; typename v8::WeakCallbackInfo<P>::Callback = void (*)(const v8::WeakCallbackInfo<node::ObjectWrap>&)]’:
/home/emiliano/.node-gyp/11.15.0/include/node/node_object_wrap.h:84:78:   se requiere desde aquí
/home/emiliano/.node-gyp/11.15.0/include/node/v8.h:9710:16: aviso: cast between incompatible function types from ‘v8::WeakCallbackInfo<node::ObjectWrap>::Callback’ {aka ‘void (*)(const v8::WeakCallbackInfo<node::ObjectWrap>&)’} to ‘Callback’ {aka ‘void (*)(const v8::WeakCallbackInfo<void>&)’} [-Wcast-function-type]
                reinterpret_cast<Callback>(callback), type);
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/emiliano/.node-gyp/11.15.0/include/node/v8.h: En la instanciación de ‘void v8::PersistentBase<T>::SetWeak(P*, typename v8::WeakCallbackInfo<P>::Callback, v8::WeakCallbackType) [with P = Nan::ObjectWrap; T = v8::Object; typename v8::WeakCallbackInfo<P>::Callback = void (*)(const v8::WeakCallbackInfo<Nan::ObjectWrap>&)]’:
../node_modules/nan/nan_object_wrap.h:65:61:   se requiere desde aquí
/home/emiliano/.node-gyp/11.15.0/include/node/v8.h:9710:16: aviso: cast between incompatible function types from ‘v8::WeakCallbackInfo<Nan::ObjectWrap>::Callback’ {aka ‘void (*)(const v8::WeakCallbackInfo<Nan::ObjectWrap>&)’} to ‘Callback’ {aka ‘void (*)(const v8::WeakCallbackInfo<void>&)’} [-Wcast-function-type]
../src/bufferutil.cc: En la función miembro static ‘static Nan::NAN_METHOD_RETURN_TYPE BufferUtil::Mask(Nan::NAN_METHOD_ARGS_TYPE)’:
../src/bufferutil.cc:103:39: aviso: esta sentencia puede fracasar [-Wimplicit-fallthrough=]
       case 3: *((unsigned char*)to+2) = *((unsigned char*)from+2) ^ *((unsigned char*)mask+2);
               ~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../src/bufferutil.cc:104:7: nota: aquí
       case 2: *((unsigned char*)to+1) = *((unsigned char*)from+1) ^ *((unsigned char*)mask+1);
       ^~~~
../src/bufferutil.cc:104:39: aviso: esta sentencia puede fracasar [-Wimplicit-fallthrough=]
       case 2: *((unsigned char*)to+1) = *((unsigned char*)from+1) ^ *((unsigned char*)mask+1);
               ~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../src/bufferutil.cc:105:7: nota: aquí
       case 1: *((unsigned char*)to  ) = *((unsigned char*)from  ) ^ *((unsigned char*)mask);
       ^~~~
../src/bufferutil.cc: En la función miembro static ‘static Nan::NAN_METHOD_RETURN_TYPE BufferUtil::Unmask(Nan::NAN_METHOD_ARGS_TYPE)’:
../src/bufferutil.cc:78:41: aviso: esta sentencia puede fracasar [-Wimplicit-fallthrough=]
       case 3: *((unsigned char*)from+2) = *((unsigned char*)from+2) ^ ((unsigned char*)mask)[2];
               ~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../src/bufferutil.cc:79:7: nota: aquí
       case 2: *((unsigned char*)from+1) = *((unsigned char*)from+1) ^ ((unsigned char*)mask)[1];
       ^~~~
../src/bufferutil.cc:79:41: aviso: esta sentencia puede fracasar [-Wimplicit-fallthrough=]
       case 2: *((unsigned char*)from+1) = *((unsigned char*)from+1) ^ ((unsigned char*)mask)[1];
               ~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../src/bufferutil.cc:80:7: nota: aquí
       case 1: *((unsigned char*)from  ) = *((unsigned char*)from  ) ^ ((unsigned char*)mask)[0];
       ^~~~
In file included from ../src/validation.cc:16:
../node_modules/nan/nan.h: En la función ‘void Nan::AsyncQueueWorker(Nan::AsyncWorker*)’:
../node_modules/nan/nan.h:2298:62: aviso: cast between incompatible function types from ‘void (*)(uv_work_t*)’ {aka ‘void (*)(uv_work_s*)’} to ‘uv_after_work_cb’ {aka ‘void (*)(uv_work_s*, int)’} [-Wcast-function-type]
     , reinterpret_cast<uv_after_work_cb>(AsyncExecuteComplete)
                                                              ^
../src/validation.cc: En la función miembro static ‘static Nan::NAN_METHOD_RETURN_TYPE Validation::IsValidUTF8(Nan::NAN_METHOD_ARGS_TYPE)’:
../src/validation.cc:133:50: aviso: ‘v8::Local<v8::Object> v8::Value::ToObject() const’ es obsoleto: Use maybe version [-Wdeprecated-declarations]
     Local<Object> buffer_obj = info[0]->ToObject();
                                                  ^
In file included from ../src/validation.cc:8:
/home/emiliano/.node-gyp/11.15.0/include/node/v8.h:10257:15: nota: se declara aquí
 Local<Object> Value::ToObject() const {
               ^~~~~
In file included from ../src/validation.cc:9:
../src/validation.cc: En el ámbito global:
/home/emiliano/.node-gyp/11.15.0/include/node/node.h:544:43: aviso: cast between incompatible function types from ‘void (*)(v8::Handle<v8::Object>)’ {aka ‘void (*)(v8::Local<v8::Object>)’} to ‘node::addon_register_func’ {aka ‘void (*)(v8::Local<v8::Object>, v8::Local<v8::Value>, void*)’} [-Wcast-function-type]
       (node::addon_register_func) (regfunc),                          \
                                           ^
/home/emiliano/.node-gyp/11.15.0/include/node/node.h:578:3: nota: en expansión de macro ‘NODE_MODULE_X’
   NODE_MODULE_X(modname, regfunc, NULL, 0)  // NOLINT (readability/null_usage)
   ^~~~~~~~~~~~~
../src/validation.cc:148:1: nota: en expansión de macro ‘NODE_MODULE’
 NODE_MODULE(validation, init)
 ^~~~~~~~~~~
In file included from ../src/validation.cc:8:
/home/emiliano/.node-gyp/11.15.0/include/node/v8.h: En la instanciación de ‘void v8::PersistentBase<T>::SetWeak(P*, typename v8::WeakCallbackInfo<P>::Callback, v8::WeakCallbackType) [with P = node::ObjectWrap; T = v8::Object; typename v8::WeakCallbackInfo<P>::Callback = void (*)(const v8::WeakCallbackInfo<node::ObjectWrap>&)]’:
/home/emiliano/.node-gyp/11.15.0/include/node/node_object_wrap.h:84:78:   se requiere desde aquí
/home/emiliano/.node-gyp/11.15.0/include/node/v8.h:9710:16: aviso: cast between incompatible function types from ‘v8::WeakCallbackInfo<node::ObjectWrap>::Callback’ {aka ‘void (*)(const v8::WeakCallbackInfo<node::ObjectWrap>&)’} to ‘Callback’ {aka ‘void (*)(const v8::WeakCallbackInfo<void>&)’} [-Wcast-function-type]
                reinterpret_cast<Callback>(callback), type);
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/emiliano/.node-gyp/11.15.0/include/node/v8.h: En la instanciación de ‘void v8::PersistentBase<T>::SetWeak(P*, typename v8::WeakCallbackInfo<P>::Callback, v8::WeakCallbackType) [with P = Nan::ObjectWrap; T = v8::Object; typename v8::WeakCallbackInfo<P>::Callback = void (*)(const v8::WeakCallbackInfo<Nan::ObjectWrap>&)]’:
../node_modules/nan/nan_object_wrap.h:65:61:   se requiere desde aquí
/home/emiliano/.node-gyp/11.15.0/include/node/v8.h:9710:16: aviso: cast between incompatible function types from ‘v8::WeakCallbackInfo<Nan::ObjectWrap>::Callback’ {aka ‘void (*)(const v8::WeakCallbackInfo<Nan::ObjectWrap>&)’} to ‘Callback’ {aka ‘void (*)(const v8::WeakCallbackInfo<void>&)’} [-Wcast-function-type]
../src/validation.cc: En la función ‘int is_valid_utf8(size_t, char*)’:
../src/validation.cc:83:47: aviso: esta sentencia puede fracasar [-Wimplicit-fallthrough=]
       case 5 : ch += (uint8_t) value[i++]; ch <<= 6;
                                            ~~~^~~~~
../src/validation.cc:84:7: nota: aquí
       case 4 : ch += (uint8_t) value[i++]; ch <<= 6;
       ^~~~
../src/validation.cc:84:47: aviso: esta sentencia puede fracasar [-Wimplicit-fallthrough=]
       case 4 : ch += (uint8_t) value[i++]; ch <<= 6;
                                            ~~~^~~~~
../src/validation.cc:85:7: nota: aquí
       case 3 : ch += (uint8_t) value[i++]; ch <<= 6;
       ^~~~
../src/validation.cc:85:47: aviso: esta sentencia puede fracasar [-Wimplicit-fallthrough=]
       case 3 : ch += (uint8_t) value[i++]; ch <<= 6;
                                            ~~~^~~~~
../src/validation.cc:86:7: nota: aquí
       case 2 : ch += (uint8_t) value[i++]; ch <<= 6;
       ^~~~
../src/validation.cc:86:47: aviso: esta sentencia puede fracasar [-Wimplicit-fallthrough=]
       case 2 : ch += (uint8_t) value[i++]; ch <<= 6;
                                            ~~~^~~~~
../src/validation.cc:87:7: nota: aquí
       case 1 : ch += (uint8_t) value[i++]; ch <<= 6;
       ^~~~
../src/validation.cc:87:47: aviso: esta sentencia puede fracasar [-Wimplicit-fallthrough=]
       case 1 : ch += (uint8_t) value[i++]; ch <<= 6;
                                            ~~~^~~~~
../src/validation.cc:88:7: nota: aquí
       case 0 : ch += (uint8_t) value[i];
       ^~~~
../src/validation.cc: En la función ‘int isLegalUTF8(const uint8_t*, int)’:
../src/validation.cc:52:11: aviso: esta sentencia puede fracasar [-Wimplicit-fallthrough=]
   case 4: if ((a = (*--srcptr)) < 0x80 || a > 0xBF) return 0;
           ^~
../src/validation.cc:53:3: nota: aquí
   case 3: if ((a = (*--srcptr)) < 0x80 || a > 0xBF) return 0;
   ^~~~
../src/validation.cc:53:11: aviso: esta sentencia puede fracasar [-Wimplicit-fallthrough=]
   case 3: if ((a = (*--srcptr)) < 0x80 || a > 0xBF) return 0;
           ^~
../src/validation.cc:54:3: nota: aquí
   case 2: if ((a = (*--srcptr)) > 0xBF) return 0;
   ^~~~
../src/validation.cc:55:5: aviso: esta sentencia puede fracasar [-Wimplicit-fallthrough=]
     switch (*source) {
     ^~~~~~
../src/validation.cc:64:3: nota: aquí
   case 1: if (*source >= 0x80 && *source < 0xC2) return 0;
   ^~~~
